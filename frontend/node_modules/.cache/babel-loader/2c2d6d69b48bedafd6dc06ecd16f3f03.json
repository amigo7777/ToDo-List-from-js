{"remainingRequest":"C:\\D-drive-68500\\js\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\D-drive-68500\\js\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\D-drive-68500\\js\\frontend\\src\\netClient\\dataService.js","dependencies":[{"path":"C:\\D-drive-68500\\js\\frontend\\src\\netClient\\dataService.js","mtime":1639591692765},{"path":"C:\\D-drive-68500\\js\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\D-drive-68500\\js\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\D-drive-68500\\js\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/D-drive-68500/js/frontend/src/netClient/dataService.js"],"names":["http","doRegister","login","password","email","post","response","data","console","error","doLogin","accessToken","localStorage","doLogout","headers","removeItem","fetchTodoList","get","patchTodo","uuid","isCompleted","patch","createTodo","tittle","delettodo","delete"],"mappings":"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","sourcesContent":["import http from \"@/netClient/config\";\r\n\r\nexport async function doRegister(login, password, email){\r\n    try{\r\n       const response = await http.post('/auth/registration', { login, password, email });\r\n        return response.data;\r\n    }catch(error){\r\n        console.error({error})\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function doLogin(login, password){\r\n    try{\r\n       const response = await http.post('/auth/login', {\r\n            login,\r\n            password,\r\n        });\r\n        const {accessToken} = response.data;\r\n        localStorage.accessToken = accessToken;\r\n        return accessToken;\r\n    }catch(error){\r\n        console.error({error})\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function doLogout(){\r\n    try{\r\n       const response = await http.post('/user/logout', {},\r\n       {\r\n           headers: {\r\n               'Content-Type': \"appllication/json\",\r\n               'x-access-token' : localStorage.accessToken,\r\n           }\r\n       });\r\n        localStorage.removeItem('accessToken');\r\n        return response.data;\r\n    }catch(error){\r\n        console.error({error})\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function fetchTodoList(){\r\n    try{\r\n       const response = await http.get('/todos',\r\n       {\r\n           headers: {\r\n               'Content-Type': \"appllication/json\",\r\n               'x-access-token' : localStorage.accessToken,\r\n           }\r\n       });\r\n        return response?.data || [];\r\n        //return response.data?.todos || [];\r\n    }catch(error){\r\n        console.error({error})\r\n        throw error;\r\n    }\r\n}\r\n//неработает\r\nexport async function patchTodo(uuid, isCompleted){\r\n    try {\r\n       const response = await http.patch('/todos/' + uuid, {\r\n            isCompleted\r\n        },\r\n        {\r\n           headers: {\r\n                'Content-Type': \"appllication/json\",\r\n                'x-access-token' : localStorage.accessToken,\r\n            }\r\n       })\r\n        return response?.data ?? {};\r\n    } catch (error) {\r\n        console.error({error});\r\n    }\r\n}\r\n\r\nexport async function createTodo(tittle){\r\n    try {\r\n        const response = await http.post('/todos/created', { tittle },\r\n        {\r\n           headers: {\r\n                'Content-Type': \"appllication/json\",\r\n                'x-access-token' : localStorage.accessToken,\r\n            }\r\n       });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(error)\r\n        throw error;\r\n    }\r\n}\r\n\r\n//удаление туду по его uuid\r\nexport async function delettodo(uuid){\r\n    try {\r\n        const response = await http.delete('/todos/' + uuid,\r\n        {\r\n            headers: {\r\n                'Content-Type': \"appllication/json\",\r\n                'x-access-token' : localStorage.accessToken,\r\n            }\r\n\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(error)\r\n        throw error\r\n    }\r\n}"]}]}